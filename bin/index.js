function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var n=e(require("fs")),t=e(require("yaml"));const i=process.cwd(),r=()=>{const e=i+"/sybury.";let r="yml",s=!1;["yml","yaml"].forEach(t=>{n.existsSync(e+t)&&(s=!0,r=t)});const o=e+r,c=s?n.readFileSync(o,"utf-8"):null,a=c?t.parse(c):null;return{configPath:o,isConfigExist:s,config:a,configString:c}},s=e=>{const{configPath:i}=r(),s="string"!=typeof e?t.stringify(e):e;n.writeFileSync(i,s)},o=()=>{const e=i+"/package.json",t=n.existsSync(e),r=t?n.readFileSync(e,"utf-8"):null;return{manifestPath:e,isManifestExist:t,manifest:r?JSON.parse(r):null,manifestString:r}};function c(){return(c=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}const a=["black","red","green","yellow","blue","magenta","cyan","white"],l={reset:"[0m",bold:"[1m",dim:"[2m",italic:"[3m",underscore:"[4m",blink:"[5m",reverse:"[7m",hidden:"[8m"},y=a.reduce((e,n,t)=>c({},e,{[n]:`[3${t}m`}),{}),f=(a.reduce((e,n,t)=>c({},e,{[n]:`[4${t}m`}),{}),(e,n,t)=>y[n]+(t?l[t]:"")+e+l.reset),u=f("[sybury]","cyan"),m=u+" time",g=(...e)=>{console.log(u,...e)};console.time(m),console.clear(),g(f("Welcome to CLI","cyan","bold"));const{isManifestExist:d,manifest:p}=o();var b;r().isConfigExist||(d?(g("Generating new Config file from existing 'package.json'."),p&&s(p)):(g("Generating new Config file from template."),s({name:(null==(b=i.match(/([^\/]*)\/*$/))?void 0:b[1])||"sybury-project",version:"0.0.0",author:"",main:"",license:"MIT",repository:{type:"git",url:""},keywords:[""],scripts:{start:"",build:"",test:""},dependencies:{sybury:"sybury/framework"},devDependencies:{"sybury-cli":"sybury/cli"}}))),d&&(()=>{const{manifestPath:e}=o();n.unlinkSync(e)})();const{config:h}=r();h&&g(h.name),console.timeEnd(m),process.exit(0);
